package models

import (
	"github.com/GhostDrew11/vigor-api/internal/utils"
	"go.mongodb.org/mongo-driver/bson/primitive"
)

type Admin struct {
	ID           primitive.ObjectID `bson:"_id" json:"id"`                       // Automatically generated by MongoDB.
	Role         string             `bson:"role" json:"role" binding:"required"` // Explicitly set to "admin"
	Email        string             `bson:"email" json:"email" binding:"required"`
	PasswordHash string             `bson:"passwordHash" json:"passwordHash" binding:"required"`
}

func NewAdminfromInput(input AdminRegistrationInput) (Admin, error) {
	hasher := &utils.DefaultHasher{}
	hashedPassword, err := hasher.HashPassword(input.Password)
	if err != nil {
		return Admin{}, err
	}

	return Admin{
		ID:           primitive.NewObjectID(),
		Role:         "admin",
		Email:        input.Email,
		PasswordHash: hashedPassword,
	}, nil
}